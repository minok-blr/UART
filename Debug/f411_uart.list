
f411_uart.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000238  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003d0  080003d8  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003d0  080003d0  000103d8  2**0
                  CONTENTS
  4 .ARM          00000000  080003d0  080003d0  000103d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003d0  080003d8  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003d0  080003d0  000103d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003d4  080003d4  000103d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003d8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003d8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000103d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001038  00000000  00000000  00010408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000299  00000000  00000000  00011440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000116e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  00011748  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000adfc  00000000  00000000  00011798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000786  00000000  00000000  0001c594  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003a697  00000000  00000000  0001cd1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000573b1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000f0  00000000  00000000  00057404  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080003b8 	.word	0x080003b8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080003b8 	.word	0x080003b8

080001d8 <main>:
{
	while(*word) sendChar(*word++);
}

int main(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	// enable gpio b and c clocks, and usart 1 and 6 clocks
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);
 80001de:	4b4a      	ldr	r3, [pc, #296]	; (8000308 <main+0x130>)
 80001e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e2:	4a49      	ldr	r2, [pc, #292]	; (8000308 <main+0x130>)
 80001e4:	f043 0302 	orr.w	r3, r3, #2
 80001e8:	6313      	str	r3, [r2, #48]	; 0x30
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOCEN);
 80001ea:	4b47      	ldr	r3, [pc, #284]	; (8000308 <main+0x130>)
 80001ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001ee:	4a46      	ldr	r2, [pc, #280]	; (8000308 <main+0x130>)
 80001f0:	f043 0304 	orr.w	r3, r3, #4
 80001f4:	6313      	str	r3, [r2, #48]	; 0x30
	SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);
 80001f6:	4b44      	ldr	r3, [pc, #272]	; (8000308 <main+0x130>)
 80001f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80001fa:	4a43      	ldr	r2, [pc, #268]	; (8000308 <main+0x130>)
 80001fc:	f043 0310 	orr.w	r3, r3, #16
 8000200:	6453      	str	r3, [r2, #68]	; 0x44
	SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART6EN);
 8000202:	4b41      	ldr	r3, [pc, #260]	; (8000308 <main+0x130>)
 8000204:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000206:	4a40      	ldr	r2, [pc, #256]	; (8000308 <main+0x130>)
 8000208:	f043 0320 	orr.w	r3, r3, #32
 800020c:	6453      	str	r3, [r2, #68]	; 0x44

	SET_BIT(GPIOB->MODER, GPIO_MODER_MODER6_1);
 800020e:	4b3f      	ldr	r3, [pc, #252]	; (800030c <main+0x134>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	4a3e      	ldr	r2, [pc, #248]	; (800030c <main+0x134>)
 8000214:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000218:	6013      	str	r3, [r2, #0]
	CLEAR_BIT(GPIOB->MODER, GPIO_MODER_MODER6_0);
 800021a:	4b3c      	ldr	r3, [pc, #240]	; (800030c <main+0x134>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a3b      	ldr	r2, [pc, #236]	; (800030c <main+0x134>)
 8000220:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000224:	6013      	str	r3, [r2, #0]

	SET_BIT(GPIOC->MODER, GPIO_MODER_MODER7_1);
 8000226:	4b3a      	ldr	r3, [pc, #232]	; (8000310 <main+0x138>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	4a39      	ldr	r2, [pc, #228]	; (8000310 <main+0x138>)
 800022c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000230:	6013      	str	r3, [r2, #0]
	CLEAR_BIT(GPIOC->MODER, GPIO_MODER_MODER7_0);
 8000232:	4b37      	ldr	r3, [pc, #220]	; (8000310 <main+0x138>)
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	4a36      	ldr	r2, [pc, #216]	; (8000310 <main+0x138>)
 8000238:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800023c:	6013      	str	r3, [r2, #0]

	SET_BIT(GPIOB->AFR[0], 1<<27);
 800023e:	4b33      	ldr	r3, [pc, #204]	; (800030c <main+0x134>)
 8000240:	6a1b      	ldr	r3, [r3, #32]
 8000242:	4a32      	ldr	r2, [pc, #200]	; (800030c <main+0x134>)
 8000244:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000248:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(GPIOB->AFR[0], 1<<26);
 800024a:	4b30      	ldr	r3, [pc, #192]	; (800030c <main+0x134>)
 800024c:	6a1b      	ldr	r3, [r3, #32]
 800024e:	4a2f      	ldr	r2, [pc, #188]	; (800030c <main+0x134>)
 8000250:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8000254:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(GPIOB->AFR[0], 1<<25);
 8000256:	4b2d      	ldr	r3, [pc, #180]	; (800030c <main+0x134>)
 8000258:	6a1b      	ldr	r3, [r3, #32]
 800025a:	4a2c      	ldr	r2, [pc, #176]	; (800030c <main+0x134>)
 800025c:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8000260:	6213      	str	r3, [r2, #32]
	CLEAR_BIT(GPIOB->AFR[0], 1<<24);
 8000262:	4b2a      	ldr	r3, [pc, #168]	; (800030c <main+0x134>)
 8000264:	6a1b      	ldr	r3, [r3, #32]
 8000266:	4a29      	ldr	r2, [pc, #164]	; (800030c <main+0x134>)
 8000268:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800026c:	6213      	str	r3, [r2, #32]

	CLEAR_BIT(GPIOC->AFR[0], 1<<31);
 800026e:	4b28      	ldr	r3, [pc, #160]	; (8000310 <main+0x138>)
 8000270:	6a1b      	ldr	r3, [r3, #32]
 8000272:	4a27      	ldr	r2, [pc, #156]	; (8000310 <main+0x138>)
 8000274:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000278:	6213      	str	r3, [r2, #32]
	SET_BIT(GPIOC->AFR[0], 1<<30);
 800027a:	4b25      	ldr	r3, [pc, #148]	; (8000310 <main+0x138>)
 800027c:	6a1b      	ldr	r3, [r3, #32]
 800027e:	4a24      	ldr	r2, [pc, #144]	; (8000310 <main+0x138>)
 8000280:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000284:	6213      	str	r3, [r2, #32]
	SET_BIT(GPIOC->AFR[0], 1<<29);
 8000286:	4b22      	ldr	r3, [pc, #136]	; (8000310 <main+0x138>)
 8000288:	6a1b      	ldr	r3, [r3, #32]
 800028a:	4a21      	ldr	r2, [pc, #132]	; (8000310 <main+0x138>)
 800028c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000290:	6213      	str	r3, [r2, #32]
	SET_BIT(GPIOC->AFR[0], 1<<28);
 8000292:	4b1f      	ldr	r3, [pc, #124]	; (8000310 <main+0x138>)
 8000294:	6a1b      	ldr	r3, [r3, #32]
 8000296:	4a1e      	ldr	r2, [pc, #120]	; (8000310 <main+0x138>)
 8000298:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800029c:	6213      	str	r3, [r2, #32]

	SET_BIT(USART1->CR1, USART_CR1_UE); // enable ue bit
 800029e:	4b1d      	ldr	r3, [pc, #116]	; (8000314 <main+0x13c>)
 80002a0:	899b      	ldrh	r3, [r3, #12]
 80002a2:	b29b      	uxth	r3, r3
 80002a4:	4a1b      	ldr	r2, [pc, #108]	; (8000314 <main+0x13c>)
 80002a6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002aa:	b29b      	uxth	r3, r3
 80002ac:	8193      	strh	r3, [r2, #12]
	SET_BIT(USART1->CR1, USART_CR1_M);  // set m bit for word len
 80002ae:	4b19      	ldr	r3, [pc, #100]	; (8000314 <main+0x13c>)
 80002b0:	899b      	ldrh	r3, [r3, #12]
 80002b2:	b29b      	uxth	r3, r3
 80002b4:	4a17      	ldr	r2, [pc, #92]	; (8000314 <main+0x13c>)
 80002b6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002ba:	b29b      	uxth	r3, r3
 80002bc:	8193      	strh	r3, [r2, #12]
	//baud rate
	SET_BIT(USART1->CR1, USART_CR1_TE); //
 80002be:	4b15      	ldr	r3, [pc, #84]	; (8000314 <main+0x13c>)
 80002c0:	899b      	ldrh	r3, [r3, #12]
 80002c2:	b29b      	uxth	r3, r3
 80002c4:	4a13      	ldr	r2, [pc, #76]	; (8000314 <main+0x13c>)
 80002c6:	f043 0308 	orr.w	r3, r3, #8
 80002ca:	b29b      	uxth	r3, r3
 80002cc:	8193      	strh	r3, [r2, #12]

	SET_BIT(USART6->CR1, USART_CR1_UE);
 80002ce:	4b12      	ldr	r3, [pc, #72]	; (8000318 <main+0x140>)
 80002d0:	899b      	ldrh	r3, [r3, #12]
 80002d2:	b29b      	uxth	r3, r3
 80002d4:	4a10      	ldr	r2, [pc, #64]	; (8000318 <main+0x140>)
 80002d6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002da:	b29b      	uxth	r3, r3
 80002dc:	8193      	strh	r3, [r2, #12]
	SET_BIT(USART6->CR1, USART_CR1_M); // 1 or 0?
 80002de:	4b0e      	ldr	r3, [pc, #56]	; (8000318 <main+0x140>)
 80002e0:	899b      	ldrh	r3, [r3, #12]
 80002e2:	b29b      	uxth	r3, r3
 80002e4:	4a0c      	ldr	r2, [pc, #48]	; (8000318 <main+0x140>)
 80002e6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002ea:	b29b      	uxth	r3, r3
 80002ec:	8193      	strh	r3, [r2, #12]
	//baud rate
	SET_BIT(USART6->CR1, USART_CR1_RE);
 80002ee:	4b0a      	ldr	r3, [pc, #40]	; (8000318 <main+0x140>)
 80002f0:	899b      	ldrh	r3, [r3, #12]
 80002f2:	b29b      	uxth	r3, r3
 80002f4:	4a08      	ldr	r2, [pc, #32]	; (8000318 <main+0x140>)
 80002f6:	f043 0304 	orr.w	r3, r3, #4
 80002fa:	b29b      	uxth	r3, r3
 80002fc:	8193      	strh	r3, [r2, #12]

	uint8_t buffer[5] = {'0'};
 80002fe:	2330      	movs	r3, #48	; 0x30
 8000300:	603b      	str	r3, [r7, #0]
 8000302:	2300      	movs	r3, #0
 8000304:	713b      	strb	r3, [r7, #4]

    /* Loop forever */
	for (;;) {
 8000306:	e7fe      	b.n	8000306 <main+0x12e>
 8000308:	40023800 	.word	0x40023800
 800030c:	40020400 	.word	0x40020400
 8000310:	40020800 	.word	0x40020800
 8000314:	40011000 	.word	0x40011000
 8000318:	40011400 	.word	0x40011400

0800031c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800031c:	480d      	ldr	r0, [pc, #52]	; (8000354 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800031e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000320:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000324:	480c      	ldr	r0, [pc, #48]	; (8000358 <LoopForever+0x6>)
  ldr r1, =_edata
 8000326:	490d      	ldr	r1, [pc, #52]	; (800035c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000328:	4a0d      	ldr	r2, [pc, #52]	; (8000360 <LoopForever+0xe>)
  movs r3, #0
 800032a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800032c:	e002      	b.n	8000334 <LoopCopyDataInit>

0800032e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800032e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000330:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000332:	3304      	adds	r3, #4

08000334 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000334:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000336:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000338:	d3f9      	bcc.n	800032e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800033a:	4a0a      	ldr	r2, [pc, #40]	; (8000364 <LoopForever+0x12>)
  ldr r4, =_ebss
 800033c:	4c0a      	ldr	r4, [pc, #40]	; (8000368 <LoopForever+0x16>)
  movs r3, #0
 800033e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000340:	e001      	b.n	8000346 <LoopFillZerobss>

08000342 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000342:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000344:	3204      	adds	r2, #4

08000346 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000346:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000348:	d3fb      	bcc.n	8000342 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800034a:	f000 f811 	bl	8000370 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800034e:	f7ff ff43 	bl	80001d8 <main>

08000352 <LoopForever>:

LoopForever:
    b LoopForever
 8000352:	e7fe      	b.n	8000352 <LoopForever>
  ldr   r0, =_estack
 8000354:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000358:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800035c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000360:	080003d8 	.word	0x080003d8
  ldr r2, =_sbss
 8000364:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000368:	2000001c 	.word	0x2000001c

0800036c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800036c:	e7fe      	b.n	800036c <ADC_IRQHandler>
	...

08000370 <__libc_init_array>:
 8000370:	b570      	push	{r4, r5, r6, lr}
 8000372:	4d0d      	ldr	r5, [pc, #52]	; (80003a8 <__libc_init_array+0x38>)
 8000374:	4c0d      	ldr	r4, [pc, #52]	; (80003ac <__libc_init_array+0x3c>)
 8000376:	1b64      	subs	r4, r4, r5
 8000378:	10a4      	asrs	r4, r4, #2
 800037a:	2600      	movs	r6, #0
 800037c:	42a6      	cmp	r6, r4
 800037e:	d109      	bne.n	8000394 <__libc_init_array+0x24>
 8000380:	4d0b      	ldr	r5, [pc, #44]	; (80003b0 <__libc_init_array+0x40>)
 8000382:	4c0c      	ldr	r4, [pc, #48]	; (80003b4 <__libc_init_array+0x44>)
 8000384:	f000 f818 	bl	80003b8 <_init>
 8000388:	1b64      	subs	r4, r4, r5
 800038a:	10a4      	asrs	r4, r4, #2
 800038c:	2600      	movs	r6, #0
 800038e:	42a6      	cmp	r6, r4
 8000390:	d105      	bne.n	800039e <__libc_init_array+0x2e>
 8000392:	bd70      	pop	{r4, r5, r6, pc}
 8000394:	f855 3b04 	ldr.w	r3, [r5], #4
 8000398:	4798      	blx	r3
 800039a:	3601      	adds	r6, #1
 800039c:	e7ee      	b.n	800037c <__libc_init_array+0xc>
 800039e:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a2:	4798      	blx	r3
 80003a4:	3601      	adds	r6, #1
 80003a6:	e7f2      	b.n	800038e <__libc_init_array+0x1e>
 80003a8:	080003d0 	.word	0x080003d0
 80003ac:	080003d0 	.word	0x080003d0
 80003b0:	080003d0 	.word	0x080003d0
 80003b4:	080003d4 	.word	0x080003d4

080003b8 <_init>:
 80003b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ba:	bf00      	nop
 80003bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003be:	bc08      	pop	{r3}
 80003c0:	469e      	mov	lr, r3
 80003c2:	4770      	bx	lr

080003c4 <_fini>:
 80003c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c6:	bf00      	nop
 80003c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ca:	bc08      	pop	{r3}
 80003cc:	469e      	mov	lr, r3
 80003ce:	4770      	bx	lr
